apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: arbiter
    app.kubernetes.io/instance: reconcile-statefulset-cr
    app.kubernetes.io/managed-by: percona-server-mongodb-operator
    app.kubernetes.io/name: percona-server-mongodb
    app.kubernetes.io/part-of: percona-server-mongodb
    app.kubernetes.io/replset: rs0
  name: reconcile-statefulset-cr-rs0-arbiter
  namespace: reconcile-statefulset
  ownerReferences:
  - apiVersion: psmdb.percona.com/v1
    controller: true
    kind: PerconaServerMongoDB
    name: reconcile-statefulset-cr
    uid: ""
  resourceVersion: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: arbiter
      app.kubernetes.io/instance: reconcile-statefulset-cr
      app.kubernetes.io/managed-by: percona-server-mongodb-operator
      app.kubernetes.io/name: percona-server-mongodb
      app.kubernetes.io/part-of: percona-server-mongodb
      app.kubernetes.io/replset: rs0
  serviceName: reconcile-statefulset-cr-rs0
  template:
    metadata:
      labels:
        app.kubernetes.io/component: arbiter
        app.kubernetes.io/instance: reconcile-statefulset-cr
        app.kubernetes.io/managed-by: percona-server-mongodb-operator
        app.kubernetes.io/name: percona-server-mongodb
        app.kubernetes.io/part-of: percona-server-mongodb
        app.kubernetes.io/replset: rs0
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: arbiter
                app.kubernetes.io/instance: reconcile-statefulset-cr
                app.kubernetes.io/managed-by: percona-server-mongodb-operator
                app.kubernetes.io/name: percona-server-mongodb
                app.kubernetes.io/part-of: percona-server-mongodb
                app.kubernetes.io/replset: rs0
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --bind_ip_all
        - --auth
        - --dbpath=/data/db
        - --port=27017
        - --replSet=rs0
        - --storageEngine=wiredTiger
        - --relaxPermChecks
        - --sslAllowInvalidCertificates
        - --clusterAuthMode=x509
        - --shardsvr
        - --enableEncryption
        - --encryptionKeyFile=/etc/mongodb-encryption/encryption-key
        - --wiredTigerCacheSizeGB=0.25
        - --wiredTigerIndexPrefixCompression=true
        command:
        - /opt/percona/ps-entry.sh
        env:
        - name: SERVICE_NAME
          value: reconcile-statefulset-cr
        - name: NAMESPACE
          value: reconcile-statefulset
        - name: MONGODB_PORT
          value: "27017"
        - name: MONGODB_REPLSET
          value: rs0
        envFrom:
        - secretRef:
            name: internal-reconcile-statefulset-cr-users
            optional: false
        image: perconalab/percona-server-mongodb-operator:main-mongod7.0
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /opt/percona/mongodb-healthcheck
            - k8s
            - liveness
            - --ssl
            - --sslInsecure
            - --sslCAFile
            - /etc/mongodb-ssl/ca.crt
            - --sslPEMKeyFile
            - /tmp/tls.pem
            - --startupDelaySeconds
            - "7200"
          failureThreshold: 4
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        name: mongod-arbiter
        ports:
        - containerPort: 27017
          name: mongodb
        readinessProbe:
          exec:
            command:
            - /opt/percona/mongodb-healthcheck
            - k8s
            - readiness
            - --component
            - mongod
          failureThreshold: 8
          initialDelaySeconds: 10
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 300m
            memory: 500M
          requests:
            cpu: 300m
            memory: 500M
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /data/db
          name: mongod-data
        - mountPath: /etc/mongodb-secrets
          name: reconcile-statefulset-cr-mongodb-keyfile
          readOnly: true
        - mountPath: /etc/mongodb-ssl
          name: ssl
          readOnly: true
        - mountPath: /etc/mongodb-ssl-internal
          name: ssl-internal
          readOnly: true
        - mountPath: /opt/percona
          name: bin
        - mountPath: /etc/mongodb-encryption
          name: my-cluster-name-mongodb-encryption-key
          readOnly: true
        - mountPath: /etc/users-secret
          name: users-secret-file
        workingDir: /data/db
      initContainers:
      - command:
        - /init-entrypoint.sh
        imagePullPolicy: Always
        name: mongo-init
        resources:
          limits:
            cpu: 300m
            memory: 500M
          requests:
            cpu: 300m
            memory: 500M
        volumeMounts:
        - mountPath: /data/db
          name: mongod-data
        - mountPath: /opt/percona
          name: bin
      restartPolicy: Always
      securityContext:
        fsGroup: 1001
      volumes:
      - name: reconcile-statefulset-cr-mongodb-keyfile
        secret:
          defaultMode: 288
          optional: false
          secretName: reconcile-statefulset-cr-mongodb-keyfile
      - emptyDir: {}
        name: bin
      - name: my-cluster-name-mongodb-encryption-key
        secret:
          defaultMode: 288
          optional: false
          secretName: my-cluster-name-mongodb-encryption-key
      - name: ssl
        secret:
          defaultMode: 288
          optional: false
          secretName: reconcile-statefulset-cr-ssl
      - name: ssl-internal
        secret:
          defaultMode: 288
          optional: true
          secretName: reconcile-statefulset-cr-ssl-internal
      - name: users-secret-file
        secret:
          secretName: internal-reconcile-statefulset-cr-users
      - emptyDir: {}
        name: mongod-data
  updateStrategy:
    type: OnDelete
