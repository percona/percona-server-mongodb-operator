// Code generated by go-swagger; DO NOT EDIT.

package version_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/percona/percona-server-mongodb-operator/versionserviceclient/models"
)

// VersionServiceGetReleaseNotesReader is a Reader for the VersionServiceGetReleaseNotes structure.
type VersionServiceGetReleaseNotesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VersionServiceGetReleaseNotesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVersionServiceGetReleaseNotesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewVersionServiceGetReleaseNotesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVersionServiceGetReleaseNotesOK creates a VersionServiceGetReleaseNotesOK with default headers values
func NewVersionServiceGetReleaseNotesOK() *VersionServiceGetReleaseNotesOK {
	return &VersionServiceGetReleaseNotesOK{}
}

/*VersionServiceGetReleaseNotesOK handles this case with default header values.

A successful response.
*/
type VersionServiceGetReleaseNotesOK struct {
	Payload *models.VersionGetReleaseNotesResponse
}

func (o *VersionServiceGetReleaseNotesOK) Error() string {
	return fmt.Sprintf("[GET /release-notes/v1/{product}/{version}][%d] versionServiceGetReleaseNotesOK  %+v", 200, o.Payload)
}

func (o *VersionServiceGetReleaseNotesOK) GetPayload() *models.VersionGetReleaseNotesResponse {
	return o.Payload
}

func (o *VersionServiceGetReleaseNotesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VersionGetReleaseNotesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVersionServiceGetReleaseNotesDefault creates a VersionServiceGetReleaseNotesDefault with default headers values
func NewVersionServiceGetReleaseNotesDefault(code int) *VersionServiceGetReleaseNotesDefault {
	return &VersionServiceGetReleaseNotesDefault{
		_statusCode: code,
	}
}

/*VersionServiceGetReleaseNotesDefault handles this case with default header values.

An unexpected error response.
*/
type VersionServiceGetReleaseNotesDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the version service get release notes default response
func (o *VersionServiceGetReleaseNotesDefault) Code() int {
	return o._statusCode
}

func (o *VersionServiceGetReleaseNotesDefault) Error() string {
	return fmt.Sprintf("[GET /release-notes/v1/{product}/{version}][%d] VersionService_GetReleaseNotes default  %+v", o._statusCode, o.Payload)
}

func (o *VersionServiceGetReleaseNotesDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *VersionServiceGetReleaseNotesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
