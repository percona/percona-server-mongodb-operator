// Code generated by go-swagger; DO NOT EDIT.

package version_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/percona/percona-server-mongodb-operator/versionserviceclient/models"
)

// VersionServiceMetadataReader is a Reader for the VersionServiceMetadata structure.
type VersionServiceMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VersionServiceMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVersionServiceMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewVersionServiceMetadataDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVersionServiceMetadataOK creates a VersionServiceMetadataOK with default headers values
func NewVersionServiceMetadataOK() *VersionServiceMetadataOK {
	return &VersionServiceMetadataOK{}
}

/*VersionServiceMetadataOK handles this case with default header values.

A successful response.
*/
type VersionServiceMetadataOK struct {
	Payload *models.VersionMetadataResponse
}

func (o *VersionServiceMetadataOK) Error() string {
	return fmt.Sprintf("[GET /metadata/v1/{product}][%d] versionServiceMetadataOK  %+v", 200, o.Payload)
}

func (o *VersionServiceMetadataOK) GetPayload() *models.VersionMetadataResponse {
	return o.Payload
}

func (o *VersionServiceMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VersionMetadataResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVersionServiceMetadataDefault creates a VersionServiceMetadataDefault with default headers values
func NewVersionServiceMetadataDefault(code int) *VersionServiceMetadataDefault {
	return &VersionServiceMetadataDefault{
		_statusCode: code,
	}
}

/*VersionServiceMetadataDefault handles this case with default header values.

An unexpected error response.
*/
type VersionServiceMetadataDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the version service metadata default response
func (o *VersionServiceMetadataDefault) Code() int {
	return o._statusCode
}

func (o *VersionServiceMetadataDefault) Error() string {
	return fmt.Sprintf("[GET /metadata/v1/{product}][%d] VersionService_Metadata default  %+v", o._statusCode, o.Payload)
}

func (o *VersionServiceMetadataDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *VersionServiceMetadataDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
