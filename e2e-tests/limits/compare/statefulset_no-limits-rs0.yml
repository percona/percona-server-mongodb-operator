apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations: {}
  generation: 1
  labels:
    app.kubernetes.io/component: mongod
    app.kubernetes.io/instance: no-limits
    app.kubernetes.io/managed-by: percona-server-mongodb-operator
    app.kubernetes.io/name: percona-server-mongodb
    app.kubernetes.io/part-of: percona-server-mongodb
    app.kubernetes.io/replset: rs0
  name: no-limits-rs0
  ownerReferences:
    - controller: true
      kind: PerconaServerMongoDB
      name: no-limits
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: mongod
      app.kubernetes.io/instance: no-limits
      app.kubernetes.io/managed-by: percona-server-mongodb-operator
      app.kubernetes.io/name: percona-server-mongodb
      app.kubernetes.io/part-of: percona-server-mongodb
      app.kubernetes.io/replset: rs0
  serviceName: no-limits-rs0
  template:
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: mongod
        app.kubernetes.io/instance: no-limits
        app.kubernetes.io/managed-by: percona-server-mongodb-operator
        app.kubernetes.io/name: percona-server-mongodb
        app.kubernetes.io/part-of: percona-server-mongodb
        app.kubernetes.io/replset: rs0
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: mongod
                  app.kubernetes.io/instance: no-limits
                  app.kubernetes.io/managed-by: percona-server-mongodb-operator
                  app.kubernetes.io/name: percona-server-mongodb
                  app.kubernetes.io/part-of: percona-server-mongodb
                  app.kubernetes.io/replset: rs0
              topologyKey: kubernetes.io/hostname
      containers:
        - args:
            - --bind_ip_all
            - --auth
            - --dbpath=/data/db
            - --port=27017
            - --replSet=rs0
            - --storageEngine=wiredTiger
            - --relaxPermChecks
            - --sslAllowInvalidCertificates
            - --sslMode=preferSSL
            - --clusterAuthMode=x509
            - --slowms=100
            - --profile=1
            - --rateLimit=1
            - --enableEncryption
            - --encryptionKeyFile=/etc/mongodb-encryption/encryption-key
            - --wiredTigerCollectionBlockCompressor=snappy
            - --wiredTigerJournalCompressor=snappy
            - --wiredTigerIndexPrefixCompression=true
            - --setParameter
            - ttlMonitorSleepSecs=60
            - --setParameter
            - wiredTigerConcurrentReadTransactions=128
            - --setParameter
            - wiredTigerConcurrentWriteTransactions=128
          command:
            - /data/db/ps-entry.sh
          env:
            - name: SERVICE_NAME
              value: no-limits
            - name: MONGODB_PORT
              value: "27017"
            - name: MONGODB_REPLSET
              value: rs0
          envFrom:
            - secretRef:
                name: internal-no-limits-users
                optional: false
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /data/db/mongodb-healthcheck
                - k8s
                - liveness
                - --ssl
                - --sslInsecure
                - --sslCAFile
                - /etc/mongodb-ssl/ca.crt
                - --sslPEMKeyFile
                - /tmp/tls.pem
                - --startupDelaySeconds
                - "7200"
            failureThreshold: 4
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: mongod
          ports:
            - containerPort: 27017
              name: mongodb
              protocol: TCP
          readinessProbe:
            failureThreshold: 8
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 300m
              memory: 500M
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /data/db
              name: mongod-data
            - mountPath: /etc/mongodb-secrets
              name: no-limits-mongodb-keyfile
              readOnly: true
            - mountPath: /etc/mongodb-ssl
              name: ssl
              readOnly: true
            - mountPath: /etc/mongodb-ssl-internal
              name: ssl-internal
              readOnly: true
            - mountPath: /etc/mongodb-encryption
              name: no-limits-mongodb-encryption-key
              readOnly: true
            - mountPath: /etc/users-secret
              name: users-secret-file
          workingDir: /data/db
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - /init-entrypoint.sh
          imagePullPolicy: Always
          name: mongo-init
          resources:
            requests:
              cpu: 300m
              memory: 500M
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /data/db
              name: mongod-data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - name: no-limits-mongodb-keyfile
          secret:
            defaultMode: 288
            optional: false
            secretName: no-limits-mongodb-keyfile
        - name: no-limits-mongodb-encryption-key
          secret:
            defaultMode: 288
            optional: false
            secretName: no-limits-mongodb-encryption-key
        - name: ssl
          secret:
            defaultMode: 288
            optional: false
            secretName: some-name-ssl
        - name: ssl-internal
          secret:
            defaultMode: 288
            optional: true
            secretName: no-limits-ssl-internal
        - name: users-secret-file
          secret:
            defaultMode: 420
            secretName: internal-no-limits-users
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: mongod-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status:
        phase: Pending
