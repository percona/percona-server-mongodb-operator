#!/bin/bash

set -o errexit

test_dir=$(realpath $(dirname $0))
. ${test_dir}/../functions
set_debug

if [ -n "${OPENSHIFT}" ]; then
	echo "This test is not supported on OpenShift because hostpath is not allowed by default"
	exit 0
fi

check_cr_config() {
	local cluster="$1"

	desc "create first PSMDB cluster $cluster"
	apply_cluster $test_dir/conf/$cluster.yml

	desc 'check if all 3 Pods started'
	wait_for_running $cluster 3

	desc 'check if statefulset created with expected config'
	compare_kubectl statefulset/$cluster

	desc 'create user myApp'
	run_mongo \
		'db.createUser({user:"myApp",pwd:"myPass",roles:[{db:"myApp",role:"readWrite"}]})' \
		"userAdmin:userAdmin123456@$cluster.$namespace"
	sleep 2

	desc 'write data, read from all'
	run_mongo \
		'use myApp\n db.test.insert({ x: 100500 })' \
		"myApp:myPass@$cluster.$namespace"
	compare_mongo_cmd "find" "myApp:myPass@$cluster-0.$cluster.$namespace"
	compare_mongo_cmd "find" "myApp:myPass@$cluster-1.$cluster.$namespace"
	compare_mongo_cmd "find" "myApp:myPass@$cluster-2.$cluster.$namespace"

	desc 'delete PSMDB cluster'
	kubectl_bin delete \
		-f $test_dir/conf/$cluster.yml
}

main() {
	create_infra $namespace
	deploy_cert_manager

	desc 'create secrets and start client'
	kubectl_bin apply \
		-f $conf_dir/client.yml \
		-f $conf_dir/secrets.yml \
		-f $test_dir/conf/hostpath-helper.yml

	desc 'check emptydir'
	check_cr_config "emptydir-rs0"

	desc 'check hostpath'
	check_cr_config "hostpath-rs0"

	destroy $namespace

	desc 'test passed'
}

main
