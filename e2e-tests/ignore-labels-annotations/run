#!/bin/bash

set -o errexit
set -o xtrace

test_dir=$(realpath "$(dirname "$0")")
. "${test_dir}/../functions"

create_infra "$namespace"
cluster="some-name"

apply_cluster "$test_dir/conf/$cluster.yml"
desc 'check if all 3 Pods started'
wait_for_running "$cluster-rs0" 3

check_service() {
    kubectl_bin patch psmdb "$cluster" --type=json --patch '[
        {
            "op": "replace",
            "path": "/spec/ignoreAnnotations",
            "value": ["ignoredAnnotation"]
        },
        {
            "op": "replace",
            "path": "/spec/ignoreLabels",
            "value": ["ignoredLabel"]
        }
    ]'
	replset_name=$1

	local expose_path
	local svc_name
	case $replset_name in

		"rs0")
			expose_path="/spec/replsets/0/expose"
			svc_name="$cluster-rs0-0"
			;;

		"cfg")
			expose_path="/spec/sharding/configsvrReplSet/expose"
			svc_name="$cluster-cfg-0"
			;;

		"mongos")
			expose_path="/spec/sharding/mongos/expose"
			svc_name="$cluster-mongos-0"
			;;

		*)
			desc 'unknown check_service argument'
			exit 1
			;;
	esac

	desc "add labels and annotation manually in service $svc_name"
	# `notIgnoredLabel` and `notIgnoredAnnotation` should be deleted
	kubectl_bin patch "service/$svc_name" --type=json --patch '[
        {
            "op": "add", 
            "path": "/metadata/labels", 
            "value": {
                "notIgnoredLabel": "true",
                "ignoredLabel": "true"
            }
        },
        {
            "op": "add", 
            "path": "/metadata/annotations", 
            "value": {
                "notIgnoredAnnotation": "true",
                "ignoredAnnotation": "true"
            }
        }]'

	sleep 5 # waiting for reconcile
	desc "check if not ignored annotations/labels are deleted from service $svc_name"
	compare_kubectl "service/$svc_name"

	desc 'removing ignoreLabels'
	# `ignoredLabel` should be deleted
	kubectl_bin patch psmdb ${cluster} --type=json --patch '[
        {
            "op": "remove", 
            "path": "/spec/ignoreLabels",
        }]'

	sleep 5 # waiting for reconcile
	compare_kubectl "service/$svc_name" "-no-ignored-labels"

	desc "removing serviceLabels and ignoreAnnotations for service $svc_name"
	# When `serviceLabels` and `serviceAnnotations` are not set, old metadata should stay
	kubectl_bin patch psmdb ${cluster} --type=json --patch '[
        {
            "op": "remove", 
            "path": "'$expose_path'/serviceLabels", 
        },
        {
            "op": "remove", 
            "path": "/spec/ignoreAnnotations",
        }]'

	sleep 5 # waiting for reconcile
	compare_kubectl "service/$svc_name" "-no-ignored-labels"

	desc "adding serviceAnnotation for service $svc_name"
	# Old metadata should be deleted
	kubectl_bin patch psmdb ${cluster} --type=json --patch '[
        {
            "op": "add", 
            "path": "'$expose_path'/serviceAnnotations", 
            "value": {
                "crAnnotation": "true",
            }
        }]'

	sleep 5 # waiting for reconcile
	compare_kubectl "service/$svc_name" "-cr-annotation"
}

check_service "rs0"
check_service "cfg"
check_service "mongos"

destroy "$namespace"
