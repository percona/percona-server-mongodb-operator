#!/bin/bash

set -o errexit
set -o xtrace

test_dir=$(realpath "$(dirname "$0")")
. "${test_dir}/../functions"

create_infra "$namespace"
cluster="some-name"

desc 'create secrets and start client'
kubectl_bin apply \
	-f $conf_dir/secrets_with_tls.yml \
	-f $conf_dir/client.yml

apply_cluster "$test_dir/conf/$cluster.yml"
desc 'check if all 3 Pods started'
wait_for_running "$cluster-rs0" 3
wait_for_running "$cluster-cfg" 3
wait_cluster_consistency "${cluster}"

desc "Kill primary to elect new one and test cluster deletion when primary is not rs0-0"
primary=$(get_mongo_primary "clusterAdmin:clusterAdmin123456@$cluster-rs0.$namespace" "$cluster")
if [ "$primary" == "$cluster-rs0-0" ]; then
	kubectl_bin delete pods --grace-period=0 --force $primary
	wait_for_running "$cluster-rs0" 3
	wait_cluster_consistency "${cluster}"
fi
primary=$(get_mongo_primary "clusterAdmin:clusterAdmin123456@$cluster-rs0.$namespace" "$cluster")
if [ "$primary" == "$cluster-rs0-0" ]; then
	echo "Primary is the same as before, something went wrong!"
	exit 1
fi

kubectl_bin delete psmdb $cluster --wait=false

desc "Wait for delete cluster $cluster"
wait_for_delete psmdb/$cluster 180

desc "Wait for delete PVCs"
wait_for_delete pvc/mongod-data-$cluster-cfg-0
wait_for_delete pvc/mongod-data-$cluster-cfg-1
wait_for_delete pvc/mongod-data-$cluster-cfg-2
wait_for_delete pvc/mongod-data-$cluster-rs0-0
wait_for_delete pvc/mongod-data-$cluster-rs0-1
wait_for_delete pvc/mongod-data-$cluster-rs0-2

desc "Test passed"
destroy "$namespace"
