#!/bin/bash

set -o errexit
set -o xtrace

test_dir=$(realpath $(dirname $0))
. ${test_dir}/../functions

create_namespace $namespace
deploy_operator
apply_s3_storage_secrets
deploy_minio

kubectl_bin apply -f $conf_dir/secrets.yml -f $conf_dir/client.yml -f $conf_dir/minio-secret.yml
cluster="some-name"

desc 'create first PSMDB cluster'
sc=$(kubectl get storageclass -o custom-columns=NAME:.metadata.name --no-headers=true | tail -n1)
yq eval '(.. | select(has("storageClassName")).storageClassName) = "'$sc'"' $test_dir/conf/$cluster.yml >${tmp_dir}/$cluster.yml
apply_cluster ${tmp_dir}/$cluster.yml
wait_cluster_consistency $cluster

desc 'write data, read from all'
run_mongos \
	'db.createUser({user:"myApp",pwd:"myPass",roles:[{db:"myApp",role:"readWrite"}]})' \
	"userAdmin:userAdmin123456@$cluster-mongos.$namespace"
sleep 2
run_mongos \
	'use myApp\n db.test.insert({ x: 100500 })' \
	"myApp:myPass@$cluster-mongos.$namespace"
# compare_mongos_cmd "find" "myApp:myPass@$cluster-mongos.$namespace"

wait_backup_agent $cluster-shard1-0
wait_backup_agent $cluster-shard1-1
wait_backup_agent $cluster-shard1-2
wait_backup_agent $cluster-shard3-0
wait_backup_agent $cluster-shard3-1
wait_backup_agent $cluster-shard3-2
wait_backup_agent $cluster-shard5-0
wait_backup_agent $cluster-shard5-1
wait_backup_agent $cluster-shard5-2
wait_backup_agent $cluster-shard7-0
wait_backup_agent $cluster-shard7-1
wait_backup_agent $cluster-shard7-2
backup_name_aws="backup-aws-s3"
backup_name_minio="backup-minio"
backup_name_gcp="backup-gcp-cs"

desc 'run backups'
run_backup minio
wait_backup "$backup_name_minio"

if [ -z "$SKIP_BACKUPS_TO_AWS_GCP_AZURE" ]; then
	run_backup aws-s3
	run_backup gcp-cs

	wait_backup "$backup_name_aws"
	wait_backup "$backup_name_gcp"
fi

if [ -z "$SKIP_BACKUPS_TO_AWS_GCP_AZURE" ]; then
	desc 'check backup and restore -- aws-s3'
	run_restore $backup_name_aws 3 1 "-mongos"
	wait_restore $backup_name_aws $cluster "ready"

	desc 'check backup and restore -- gcp-cs'
	run_restore $backup_name_gcp 3 1 "-mongos"
	wait_restore $backup_name_gcp $cluster "ready"
fi

desc 'check backup and restore -- minio'
run_restore $backup_name_minio 3 1 "-mongos"

sleep 120
wait_restore $backup_name_minio $cluster "ready"

destroy $namespace
