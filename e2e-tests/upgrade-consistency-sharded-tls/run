#!/bin/bash

set -o errexit

test_dir=$(realpath "$(dirname "$0")")
. "${test_dir}/../functions"
set_debug

CLUSTER='some-name'

wait_cluster() {
	wait_for_running ${CLUSTER}-rs0 3
	wait_for_running ${CLUSTER}-cfg 3
	wait_for_running ${CLUSTER}-mongos 3
	wait_cluster_consistency ${CLUSTER}
}

main() {
	create_infra "$namespace"
	deploy_cert_manager

	desc 'create secrets and start client'
	kubectl_bin apply -f "$conf_dir/secrets.yml"
	kubectl_bin apply -f "$conf_dir/client_with_tls.yml"
	deploy_cmctl

	desc "create first PSMDB cluster 1.17.0 $CLUSTER"
	apply_cluster "$test_dir/conf/${CLUSTER}.yml"

	desc 'check if Pod started'
	wait_cluster

	compare_generation "1" "statefulset" "${CLUSTER}-rs0"
	compare_generation "1" "statefulset" "${CLUSTER}-cfg"

	# Wait for at least one reconciliation
	sleep 20
	desc 'check if Pod started'
	wait_cluster

	renew_certificate "some-name-ssl"
	sleep 20
	wait_cluster
	compare_generation "2" "statefulset" "${CLUSTER}-rs0"
	compare_generation "2" "statefulset" "${CLUSTER}-cfg"

	renew_certificate "some-name-ssl-internal"
	sleep 20
	wait_cluster
	compare_generation "3" "statefulset" "${CLUSTER}-rs0"
	compare_generation "3" "statefulset" "${CLUSTER}-cfg"

	desc 'check if service and statefulset created with expected config'
	compare_kubectl service/${CLUSTER}-rs0 "-1170"
	compare_kubectl service/${CLUSTER}-cfg "-1170"
	compare_kubectl statefulset/${CLUSTER}-rs0 "-1170"
	compare_kubectl statefulset/${CLUSTER}-cfg "-1170"

	desc 'test 1.18.0'
	kubectl_bin patch psmdb "${CLUSTER}" --type=merge --patch '{
        "spec": {"crVersion":"1.18.0"}
    }'
	# Wait for at least one reconciliation
	sleep 20
	desc 'check if Pod started'
	wait_cluster
	compare_generation "3" "statefulset" "${CLUSTER}-rs0"
	compare_generation "3" "statefulset" "${CLUSTER}-cfg"

	renew_certificate "some-name-ssl"
	sleep 20
	wait_cluster
	compare_generation "4" "statefulset" "${CLUSTER}-rs0"
	compare_generation "4" "statefulset" "${CLUSTER}-cfg"

	renew_certificate "some-name-ssl-internal"
	sleep 20
	wait_cluster
	compare_generation "5" "statefulset" "${CLUSTER}-rs0"
	compare_generation "5" "statefulset" "${CLUSTER}-cfg"

	desc 'check if service and statefulset created with expected config'
	compare_kubectl service/${CLUSTER}-rs0 "-1180"
	compare_kubectl service/${CLUSTER}-cfg "-1180"
	compare_kubectl statefulset/${CLUSTER}-rs0 "-1180"
	compare_kubectl statefulset/${CLUSTER}-cfg "-1180"

	desc 'test 1.19.0'
	kubectl_bin patch psmdb "${CLUSTER}" --type=merge --patch '{
        "spec": {"crVersion":"1.19.0"}
    }'
	# Wait for at least one reconciliation
	sleep 20
	desc 'check if Pod started'
	wait_cluster
	compare_generation "5" "statefulset" "${CLUSTER}-rs0"
	compare_generation "5" "statefulset" "${CLUSTER}-cfg"

	renew_certificate "some-name-ssl"
	sleep 20
	wait_cluster
	compare_generation "6" "statefulset" "${CLUSTER}-rs0"
	compare_generation "6" "statefulset" "${CLUSTER}-cfg"

	renew_certificate "some-name-ssl-internal"
	sleep 20
	wait_cluster
	compare_generation "7" "statefulset" "${CLUSTER}-rs0"
	compare_generation "7" "statefulset" "${CLUSTER}-cfg"

	desc 'check if service and statefulset created with expected config'
	compare_kubectl service/${CLUSTER}-rs0 "-1190"
	compare_kubectl service/${CLUSTER}-cfg "-1190"
	compare_kubectl statefulset/${CLUSTER}-rs0 "-1190"
	compare_kubectl statefulset/${CLUSTER}-cfg "-1190"

	destroy "$namespace"

	desc 'test passed'
}

main
