apiVersion: v1
kind: Secret
metadata:
  name: openldap
type: Opaque
stringData:
  adminpassword: adminpassword
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: ldap-issuer
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ldap-ca
spec:
  isCA: true
  commonName: openldap
  secretName: ldap-ca
  issuerRef:
    name: ldap-issuer
    kind: Issuer
    group: cert-manager.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: percona-ldif
data:
  0-base.ldif: |-
    dn: dc=ldap,dc=local
    objectClass: top
    objectClass: dcObject
    objectClass: organization
    o: ldap.local
    dc: ldap
  1-percona-ous.ldif: |-
    dn: ou=perconadba,dc=ldap,dc=local
    objectClass: organizationalUnit
    ou: perconadba
  2-percona-users.ldif: |-
    dn: uid=percona,ou=perconadba,dc=ldap,dc=local
    objectClass: top
    objectClass: account
    objectClass: posixAccount
    objectClass: shadowAccount
    cn: percona
    uid: percona
    uidNumber: 1100
    gidNumber: 100
    homeDirectory: /home/percona
    loginShell: /bin/bash
    gecos: percona
    userPassword: password
    shadowLastChange: -1
    shadowMax: -1
   #userPassword: {crypt}x
   #shadowWarning: -1 
  3-group-cn.ldif: |-
    dn: cn=admin,ou=perconadba,dc=ldap,dc=local
    cn: admin
    objectClass: groupOfUniqueNames
    objectClass: top
    ou: perconadba
    uniqueMember: uid=percona,ou=perconadba,dc=ldap,dc=local
  4-readonly-user.ldif: |-
    dn: cn=readonly,dc=ldap,dc=local
    objectClass: top
    objectClass: person
    objectClass: organizationalPerson
    objectClass: inetOrgPerson
    cn: readonly
    sn: readonly
    userPassword: readonlypass
    description: Read-only user for database-issued user lookups
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openldap
  labels:
    app.kubernetes.io/name: openldap
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: openldap
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: openldap
    spec:
      containers:
        - name: openldap
          image: docker.io/bitnami/openldap:latest
          imagePullPolicy: "Always"
          env:
            - name: LDAP_ENABLE_TLS
              value: "yes"
            - name: LDAP_REQUIRE_TLS
              value: "yes"
            - name: LDAP_TLS_CERT_FILE
              value: "/opt/bitnami/openldap/certs/tls.crt"
            - name: LDAP_TLS_KEY_FILE
              value: "/opt/bitnami/openldap/certs/tls.key"
            - name: LDAP_TLS_CA_FILE
              value: "/opt/bitnami/openldap/certs/ca.crt"
            - name: LDAP_ROOT
              value: "dc=ldap,dc=local"
            - name: LDAP_ADMIN_USERNAME
              value: "admin"
            - name: LDAP_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: adminpassword
                  name: openldap
            - name: LDAP_LOGLEVEL
              value: "64"
            - name: BITNAMI_DEBUG
              value: "true"
          ports:
            - name: tls-ldap
              containerPort: 1636
          volumeMounts:
            - name: custom-ldif
              mountPath: /ldifs
            - name: ldap-ca
              mountPath: /opt/bitnami/openldap/certs
      volumes:
        - name: custom-ldif
          configMap:
            name: percona-ldif
        - name: ldap-ca
          secret:
            secretName: ldap-ca
---
apiVersion: v1
kind: Service
metadata:
  name: openldap
  labels:
    app.kubernetes.io/name: openldap
spec:
  type: ClusterIP
  ports:
    - name: tls-ldap
      port: 1636
      targetPort: tls-ldap
  selector:
    app.kubernetes.io/name: openldap
