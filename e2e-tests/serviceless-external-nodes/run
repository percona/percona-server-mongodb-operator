#!/bin/bash

cluster="mydb"

set -o errexit
set -o xtrace

test_dir=$(realpath "$(dirname "$0")")
. "${test_dir}/../functions"

if [[ ${IMAGE_MONGOD} == *"percona-server-mongodb-operator"* ]]; then
	MONGO_VER=$(echo -n "${IMAGE_MONGOD}" | $sed -r 's/.*([0-9].[0-9])$/\1/')
else
	MONGO_VER=$(echo -n "${IMAGE_MONGOD}" | $sed -r 's/.*:([0-9]+\.[0-9]+).*$/\1/')
fi
unset OPERATOR_NS

desc "Create main cluster"
create_infra "$namespace"
kubectl_bin apply \
	-f "$conf_dir/client.yml" \
	-f "$test_dir/conf/secrets.yml"

apply_cluster "$test_dir/conf/main.yml"
wait_for_running "$cluster-rs0" 1

desc "Start External Cluster in unmanaged mode"
kubectl_bin config set-context $(kubectl_bin config current-context) --namespace="$replica_namespace"
create_namespace $replica_namespace 0
deploy_operator

kubectl_bin apply \
	-f "$conf_dir/client.yml" \
	-f "$test_dir/conf/secrets.yml"
apply_cluster "$test_dir/conf/external.yml"

wait_pod ${cluster}-rs0-0
wait_pod ${cluster}-rs0-1

kubectl_bin config set-context $(kubectl_bin config current-context) --namespace="$namespace"

kubectl_bin get psmdb $cluster -o yaml >$tmp_dir/psmdb.yaml

cat $tmp_dir/psmdb.yaml \
	| $sed -e "s/- host: mydb-rs0-0.mydb-rs0.external.svc.cluster.local/- host: mydb-rs0-0.mydb-rs0.$replica_namespace.svc.cluster.local/" \
	| $sed -e "s/- host: mydb-rs0-1.mydb-rs0.external.svc.cluster.local/- host: mydb-rs0-1.mydb-rs0.$replica_namespace.svc.cluster.local/" \
	| $sed -e "s/- host: mydb-cfg-0.mydb-cfg.external.svc.cluster.local/- host: mydb-cfg-0.mydb-cfg.$replica_namespace.svc.cluster.local/" \
	| kubectl_bin apply -f -

wait_cluster_consistency ${cluster}

run_mongo 'rs.status().members.forEach(function(z){printjson(z.name);printjson(z.stateStr); })' "clusterAdmin:clusterAdmin123456@${cluster}-rs0-0.${cluster}-rs0.${namespace}" "mongodb" | egrep -v 'I NETWORK|W NETWORK|Error saving history file|Percona Server for MongoDB|connecting to:|Unable to reach primary for set|Implicit session:|versions do not match|bye' >"$tmp_dir/rs.txt"

cat "${test_dir}/compare/rs.txt" \
	| $sed -e "s/mydb-rs0-0.mydb-rs0.main.svc.cluster.local:27017/mydb-rs0-0.mydb-rs0.$namespace.svc.cluster.local:27017/" \
	| $sed -e "s/mydb-rs0-0.mydb-rs0.external.svc.cluster.local:27017/mydb-rs0-0.mydb-rs0.$replica_namespace.svc.cluster.local:27017/" \
	| $sed -e "s/mydb-rs0-1.mydb-rs0.external.svc.cluster.local:27017/mydb-rs0-1.mydb-rs0.$replica_namespace.svc.cluster.local:27017/" \
		>$tmp_dir/rs-expected.txt

diff $tmp_dir/rs-expected.txt "$tmp_dir/rs.txt"

destroy "$namespace" "true"

destroy $replica_namespace "true"

desc "test passed"
