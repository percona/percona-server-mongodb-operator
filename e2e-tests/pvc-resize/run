#!/bin/bash

set -o errexit

test_dir=$(realpath $(dirname $0))
. ${test_dir}/../functions

set_debug

if [[ $EKS == 1 ]]; then
    echo "Skip the test. We don't run it for EKS."
    exit 0
fi

create_infra ${namespace}

desc 'create secrets and psmdb client'
kubectl_bin apply \
    -f $conf_dir/secrets.yml \
    -f $conf_dir/client.yml

desc 'create PSMDB cluster'
cluster="some-name"
spinup_psmdb "${cluster}-rs0" "$conf_dir/$cluster-rs0.yml"

kubectl_bin patch psmdb ${cluster} --type=json -p='[{"op": "replace", "path": "/spec/replsets/0/volumeSpec/persistentVolumeClaim/resources/requests/storage", "value":"5Gi"}]'
wait_cluster_consistency "$cluster" 3 2

for pvc in $(kubectl_bin get pvc -l app.kubernetes.io/component=mongod -o name); do
    retry=0
    until [[ $(kubectl_bin get ${pvc} -o jsonpath={.status.capacity.storage}) == "5Gi" ]]; do
        if [[ $retry -ge 60 ]]; then
            echo "PVC ${pvc} was not resized, max retries exceeded"
            exit 1
        fi

        echo "Waiting for PVC ${pvc} to be resized"
        sleep 5

        retry=$((retry + 1))
    done
    echo "PVC ${pvc} was resized"
done

destroy "${namespace}"
desc "test passed"
